public class Solution {
    /**
     * @param nums: A list of integers
     * @return: A list of integers
     */
    public void swapItem(int[] nums, int i, int j){
        int temp=nums[i];
        nums[i]=nums[j];
        nums[j]=temp;
        return;
    }
    public void swapList(int[] nums, int i, int j){
        while(i<j){
            swapItem(nums, i, j);
            i++;
            j--;
        }
        return;
    }
    public int[] nextPermutation(int[] nums) {
        // write your code here
        if(nums.length==0){
            return null; 
        }
        //find the first, nums[i]>nums[i-1]
        int i=nums.length-1;
        while(i>0&&nums[i]<=nums[i-1]){
            i--;
        }
        //find the first in right side which is larger than nums[i-1]
        int j=nums.length-1;
        if(i!=0){
        while(j>0&& nums[j]<=nums[i-1]){
            j--;
        }
         swapItem(nums, i-1,j);
        }
        swapList(nums,i, nums.length-1);
        return nums;
    }
}
