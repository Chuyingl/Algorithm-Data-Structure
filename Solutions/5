public class Solution {
    /**
     * @param A: An integer array
     * @return: An integer
     */
    public int stoneGame2(int[] A) {
        // write your code here
        if(A.length==0){
            return 0;
        }
        int n =A.length;
        int[]B=new int[2*n];
        for(int i=0; i<2*n; i++){
            B[i]= i>=n? A[i-n]: A[i];
        }
        // inital dp
        int[][]dp=new int[2*n][2*n];
        for(int i=0; i<2*n; i++){
            dp[i][i]=0;
        }
        int[] sum= new int[2*n+1];
        for(int i=1; i<2*n; i++){
            sum[i]=sum[i-1]+B[i-1];
        }
        for(int len=2; len<=2*n; len++){
            for(int i=0; i+len-1<2*n; i++){
                int j= i+len-1;
                dp[i][j]=Integer.MAX_VALUE;
                for(int k=i; k<j; k++){
                    dp[i][j]=Math.min(dp[i][j],dp[i][k]+dp[k+1][j]+sum[j+1]-sum[i]);
                }
            }
        }
        int res=Integer.MAX_VALUE;
        for(int i=0; i<n; i++){
            int j=i+n-1;
                res=Math.min(res, dp[i][j]);
        }
        return res;
    }
}
